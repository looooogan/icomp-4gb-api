<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:c="http://www.springframework.org/schema/c"
	xmlns:cache="http://www.springframework.org/schema/cache"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx  
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/cache 
    	http://www.springframework.org/schema/cache/spring-cache-3.1.xsd">
    <!-- redis属性文件 -->
    
    <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>
    <!-- redis pool config -->
<!-- 		<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"> -->
<!-- 			<property name="maxWaitMillis" value="${redis.pool.maxWait}" /> -->
<!-- 			<property name="maxTotal" value="${redis.pool.maxActive}" /> -->
<!-- 			<property name="maxIdle" value="${redis.pool.maxIdle}" /> -->
<!-- 			<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" /> -->
<!-- 		</bean> -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		 <property name="maxTotal" value="${redis.pool.maxTotal}"/>
		 <property name="maxIdle" value="${redis.pool.maxIdle}"/>
		 <property name="minIdle" value="${redis.pool.minIdle}"/>
		 <property name="maxWaitMillis" value="${redis.pool.maxWait}"/>
	 </bean>

		<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool" >
<!-- 		destroy-method="destroy" -->
			 <constructor-arg ref="jedisPoolConfig"/>
			 <constructor-arg>
				 <list>
					 <bean class="redis.clients.jedis.JedisShardInfo">
						 <constructor-arg value="${redisNode1.ip}"/>
						 <constructor-arg type="int" value="${redisNode1.port}"/>
						 <constructor-arg value="${redisNode1.name}"/>
					 </bean>
					 <bean class="redis.clients.jedis.JedisShardInfo">
						 <constructor-arg value="${redisNode3.ip}"/>
						 <constructor-arg type="int" value="${redisNode3.port}"/>
						 <constructor-arg value="{redisNode3.name}"/>
					 </bean>
				 </list>
			 </constructor-arg>
		 </bean>

<!-- 		<bean id="jedisConnFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"> -->
<!-- 			<property name="hostName" value="${redis.ip}" /> -->
<!-- 			<property name="port" value="${redis.port}" /> -->
<!-- 			<property name="poolConfig" ref="jedisPoolConfig" /> -->
<!-- 		</bean> -->

<!-- 		<bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" /> -->

		<!-- redis template definition -->
<!-- 		<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="jedisConnFactory"> -->
<!-- 			<property name="keySerializer" ref="stringRedisSerializer" /> -->
<!-- 			<property name="valueSerializer" ref="stringRedisSerializer" /> -->
<!-- 			<property name="hashKeySerializer" ref="stringRedisSerializer" /> -->
<!-- 		</bean> -->
		<!-- redis template for object -->
<!-- 		<bean id="redisTemplateObj" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="jedisConnFactory"> -->
<!-- 			<property name="keySerializer" ref="stringRedisSerializer" /> -->
<!-- 			<property name="hashKeySerializer" ref="stringRedisSerializer" /> -->
<!-- 		</bean> -->
<!-- 		<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager" c:template-ref="redisTemplateObj" /> -->
<!-- 		<cache:annotation-driven /> -->
    
</beans> 